apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{.Values.vault.name}}
  namespace: argocd
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: vault
    meta.helm.sh/release-namespace: argocd
spec:
  project: {{.Values.project}}
  source:
    repoURL: {{.Values.vault.source.repourl}}
    targetRevision: {{.Values.vault.source.targetrevision}}
    helm:
      parameters:
        - name: server.ha.enabled
          value: 'true'
        - name: server.ha.raft.enabled
          value: 'true'
        - name: server.ha.raft.config
          value: |
            ui = true
            listener "tcp" {
              tls_disable = 1
              address = "[::]:8200"
              cluster_address = "[::]:8201"
            }
            storage "raft" {
              path = "/vault/data"
            }
            service_registration "kubernetes" {}
            disable_mlock = true
            seal "azurekeyvault" {
              tenant_id = {{.Values.vault.seal.tenantid}}
              client_id = {{.Values.vault.seal.clientid}}
              client_secret = {{.Values.vault.seal.clientsecret}}
              vault_name = {{.Values.vault.seal.azurevaultname}}
              key_name = {{.Values.vault.seal.azurevaultkeyname}}
              subscription_id = {{.Values.vault.seal.subscriptionid}}
            }
        - name: server.ha.config
          value: |
            ui = true
            listener "tcp" {
              tls_disable = 1
              address = "[::]:8200"
              cluster_address = "[::]:8201"
            }
            storage "raft" {
              path = "/vault/data"
            }
            service_registration "kubernetes" {}
            disable_mlock = true
            seal "azurekeyvault" {
              tenant_id = {{.Values.vault.seal.tenantid}}
              client_id = {{.Values.vault.seal.clientid}}
              client_secret = {{.Values.vault.seal.clientsecret}}
              vault_name = {{.Values.vault.seal.azurevaultname}}
              key_name = {{.Values.vault.seal.azurevaultkeyname}}
              subscription_id = {{.Values.vault.seal.subscriptionid}}
            }
    chart: vault
  destination:
    server: {{.Values.destination.server}}
    namespace: {{.Values.vault.destination.namespace}}
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy