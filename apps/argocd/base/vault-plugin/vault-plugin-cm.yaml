apiVersion: v1
kind: ConfigMap
metadata:
  name: cmp-plugin
data:
  avp-helm-args.yaml: |
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: argocd-vault-plugin-helm-args
    spec:
      allowConcurrency: true
      discover:
        find:
          command:
            - sh
            - "-c"
            - |
              if [ -n "$(find . -name 'Chart.yaml')" ] && # if find output is nonzero
                [ -n "$(find . -name 'values.yaml')" ] && # if find output is nonzero
                [ -n "${ARGOCD_ENV_helm_args}" ]; # if var ARGOCD_ENV_helm_args is defined and nonzero
              then
                echo "ARGOCD_ENV_helm_args!"
              fi
      init:
        command: [ sh, -c, "helm dependency update" ]
      generate:
        command:
          - bash
          - "-c"
          - |
            helm template $ARGOCD_APP_NAME --include-crds -n $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_helm_args . |
            argocd-vault-plugin generate - -s $ARGOCD_APP_NAMESPACE:vault-secret
      lockRepo: false
  avp-helm-values.yaml: |
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: argocd-vault-plugin-helm-values
    spec:
      allowConcurrency: true
      discover:
        find:
          command:
            - sh
            - "-c"
            - |
              if [ -n "$(find . -name 'Chart.yaml')" ] &&
                [ -n "$(find . -name 'values.yaml')" ] &&
                [ -n "${ARGOCD_ENV_HELM_VALUES}" ];
              then
                echo "ARGOCD_ENV_HELM_VALUES"
              fi
      init:
        command: [ sh, -c, "helm dependency update" ]
      generate:
        command:
          - bash
          - "-c"
          - |
            helm template --include-crds $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE -f <(echo "$ARGOCD_ENV_HELM_VALUES") . |
            argocd-vault-plugin generate - -s $ARGOCD_APP_NAMESPACE:vault-secret
      lockRepo: false
  avp-kustomize.yaml: |
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: argocd-vault-plugin-kustomize
    spec:
      allowConcurrency: true
      discover:
        find:
          command: [ sh, -c, "find . -name kustomization.yaml" ]
      generate:
        command: [ sh, -c, "kustomize build . | argocd-vault-plugin generate - -s $ARGOCD_APP_NAMESPACE:vault-secret" ]
      lockRepo: false
  avp.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: argocd-vault-plugin
    spec:
      allowConcurrency: true
      discover:
        find:
          command:
            - sh
            - "-c"
            - >-
              if [ -z "${ARGOCD_ENV_helm_args}" ] &&
                 [ -z "${ARGOCD_ENV_HELM_VALUES}" ] &&
                 [ -n "$(find . -name '*.yaml' | xargs -I {} grep '<path\|avp\.kubernetes\.io' {})" ];
              then
                 echo "PLAIN_AVP"
              fi
      generate:
        command:
          - sh
          - "-c"
          - "argocd-vault-plugin generate . -s $ARGOCD_APP_NAMESPACE:vault-secret"
      lockRepo: false
